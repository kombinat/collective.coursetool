{"version":3,"file":"chunks/465.ddb1e5ebff79679895a8.min.js","mappings":"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","sources":["webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/uuid.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/utils.js"],"sourcesContent":["/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        dom.document_ready(() => {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        // Clean up selectors:\n        // - Remove whitespace,\n        // - Remove trailing commas,\n        // - Join to selecto string.\n        const selector_string = selectors.map(\n            (selector) => selector.trim().replace(/,$/, \"\")\n        ).join(\",\");\n\n        // Exit, if no selector.\n        if (!selector_string) {\n            return;\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selector_string\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns`` or wrapped within.\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements (not reachable anyways)\n            return (\n                !el?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                // BBB. TODO: Remove with next major version.\n                !el?.closest?.(\".cant-touch-this\")\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n\n        // Do not register blacklisted patterns.\n        let BLACKLIST = window.__patternslib_patterns_blacklist;\n        if (!Array.isArray(BLACKLIST)) {\n            BLACKLIST = [];\n        }\n        if (BLACKLIST.includes(name)) {\n            log.warn(`Pattern name ${name} is blacklisted.`);\n            return false;\n        }\n\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","/**\n * Get a universally unique id (uuid).\n *\n * @returns {String} - The uuid.\n */\nconst create_uuid = () => {\n    let uuid;\n    if (window.crypto.randomUUID) {\n        // Create a real UUID\n        // window.crypto.randomUUID does only exist in browsers with secure\n        // context.\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n        uuid = window.crypto.randomUUID();\n    } else {\n        // Create a sufficiently unique ID\n        const array = new Uint32Array(4);\n        uuid = window.crypto.getRandomValues(array).join(\"\");\n    }\n    return uuid;\n};\nexport default create_uuid;\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\nimport create_uuid from \"./uuid\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\nconst INPUT_SELECTOR = \"input, select, textarea, button\";\n\n/**\n * Wait for the document to be ready.\n *\n * @param {Function} fn - The function to call when the document is ready.\n */\nconst document_ready = (fn) => {\n    const event_id = create_uuid();\n\n    const _ready = () => {\n        if (document.readyState !== \"loading\") {\n            // Remove the event listener for this callback.\n            events.remove_event_listener(document, event_id);\n            // call on next available tick\n            setTimeout(fn, 1);\n        }\n    };\n\n    // Listen for the document to be ready and call _ready() when it is.\n    events.add_event_listener(document, \"readystatechange\", event_id, _ready);\n\n    // Also check the ready state immediately in case we missed the event.\n    _ready();\n};\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el || !el.querySelectorAll) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Test, if a element is a button-like input type.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_button = (el) => {\n    return el.matches(`\n        button,\n        input[type=image],\n        input[type=button],\n        input[type=reset],\n        input[type=submit]\n    `);\n};\n\n\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Set and get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        set_data(el, \"uuid\", create_uuid());\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(INPUT_SELECTOR)?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\n/**\n * Find any input type.\n */\nconst find_inputs = (el) => {\n    return querySelectorAllAndMe(el, INPUT_SELECTOR);\n};\n\nconst dom = {\n    document_ready: document_ready,\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_inputs: find_inputs,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    is_button: is_button,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n\n        this.change_handler = utils.debounce(() => {\n            this.change_buttons_and_toggles();\n            this.change_checked();\n        }, 50);\n\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--select-all--click\",\n                this.select_all.bind(this)\n            );\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--deselect-all--click\",\n                this.deselect_all.bind(this)\n            );\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--toggle-all--click\",\n                this.toggle_all.bind(this)\n            );\n        }\n\n        // update select/deselect button status\n        this.change_buttons_and_toggles();\n        this.change_checked();\n        events.add_event_listener(\n            this.el,\n            \"change\",\n            \"pat-checklist--change-handler--change\",\n            this.change_handler.bind(this)\n        );\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            events.remove_event_listener(it, \"pat-checklist--select-all--click\");\n        }\n        for (const it of this.all_deselects) {\n            events.remove_event_listener(it, \"pat-checklist--deselect-all--click\");\n        }\n        for (const it of this.all_toggles) {\n            events.remove_event_listener(it, \"pat-checklist--toggle-all--click\");\n        }\n        events.remove_event_listener(this.el, \"pat-checklist--change-handler--change\");\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(events.change_event());\n            box.dispatchEvent(events.input_event());\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(events.change_event());\n            box.dispatchEvent(events.input_event());\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(events.change_event());\n            box.dispatchEvent(events.input_event());\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes, ...this.all_radios]) {\n            for (const label of it.labels) {\n                label.classList.remove(\"checked\", \"unchecked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) console.debug.apply(console, messages);\n        else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\n\n/** Patternslib specifc event factories\n */\n\nclass UpdateEvent extends CustomEvent {\n    constructor(options) {\n        super(\"pat-update\", {\n            bubbles: true,\n            cancelable: true,\n            detail: options\n        });\n    }\n}\n\nconst update_event = (options) => {\n    return new UpdateEvent(options);\n}\n\n\n/** Web API event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    update_event: update_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\n// TODO: Remove in next major release.\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    // eslint-disable-next-line no-constant-binary-expression\n    return /*@cc_on!@*/false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n"],"names":["log","logging","getLogger","disable_re","dont_catch_re","disabled","match","dont_catch","exec","window","location","search","info","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","init","dom","document_ready","debug","Object","keys","sort","join","scan","document","body","clear","name","transformPattern","content","pattern","transform","prototype","$","e","error","initPattern","el","trigger","$el","plog","matches","orderPatterns","includes","splice","indexOf","unshift","querySelector","Text","jquery","selectors","this","selector_string","map","selector","trim","replace","querySelectorAllAndMe","filter","closest","parentNode","reverse","classList","add","register","BLACKLIST","__patternslib_patterns_blacklist","Array","isArray","warn","jquery_plugin","plugin_name","p1","toUpperCase","utils","jqueryPlugin","create_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","INPUT_SELECTOR","querySelectorAll","all","get_css_value","property","as_pixels","as_float","value","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","left","abs","getBoundingClientRect","scrollLeft","top","scrollTop","get_data","default_value","set_data","fn","event_id","_ready","readyState","events","remove_event_listener","setTimeout","add_event_listener","toNodeArray","nodes","NodeList","wrap","wrapper","insertBefore","appendChild","hide","style","display","show","val","find_inputs","find_parents","ret","parent","push","find_scoped","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","is_button","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","options","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","Function","call","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","id","CSS","escape","split","element_uuid","find_form","form","getOptions","patternName","length","elOptions","data","tmpOptions","i","item","key","pop","initBasePattern","undefined","Registry","parser","mockupParser","Base","async","defaults","emit","constructor","on","eventName","eventCallback","one","args","extend","patternProps","child","Error","hasOwnProperty","apply","arguments","Surrogate","__super__","autoregister","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","str","__","addAlias","alias","original","addGroupToSpec","spec","m","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","type","_typeof","choice","slice","obj","_coerce","JSON","parse","toLowerCase","num","isNaN","toString","_set","opts","parts","part","v","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","RegExp","arg","values","it","subopt","_parseShorthandNotation","parameter","shift","sense","flag","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","target","inherit","stack","$possible_config_providers","final_length","hasClass","addBack","provider","frame","attr","bind","results","removeDuplicateObjects","mergeStack","current_value","add_argument","methods","settings","time","initialTime","exceptionAreas","each","$this","lastEvent","Date","trueTime","untouched","inExceptionArea","mouseMoved","find","live","enteredException","leftException","timeout","addClass","event","destroy","off","remove","removeData","removeClass","startTimer","floor","now","diff","method","scrollable","element","css","clientHeight","clientWidth","scrollWidth","makeVisibleInScroll","parent_id","absoluteParent","elemTop","elemBottom","height","viewTop","viewBottom","safeOffset","docElem","elem","origin","nodeType","ownerDocument","documentElement","setPositionAbsolute","offsettop","offsetleft","thiswidth","width","pos","setleft","settop","appendTo","positionAncestor","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","findInclusive","slideIn","speed","easing","callback","animate","slideOut","Contains","a","scopedFind","Parser","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","change_handler","debounce","change_buttons_and_toggles","change_checked","select","btn","select_all","deselect","deselect_all","toggle","toggle_all","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","every","tgl","checked","preventDefault","box","dispatchEvent","change_event","input_event","label","labels","fieldset","root","writer","oThis","TypeError","aArgs","fToBind","fNOP","fBound","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","path","route","entry","_getFlag","context","setEnabled","state","isEnabled","setLevel","getLevel","fatal","logconfig","getWriter","event_listener_map","Map","els","removeEventListener","el_events","get","entries","regexp_from_wildcard","delete","size","UpdateEvent","CustomEvent","super","bubbles","cancelable","detail","event_type","cb","addEventListener","has","set","_cb","once","capture","await_event","event_name","Promise","resolve","await_pattern_init","reject","catch","generic_event","Event","update_event","blur_event","click_event","focus_event","mousedown_event","mouseup_event","scroll_event","submit_event","submitter","dragstart_event","dragend_event","safeClone","clone","forEach","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","pat","charAt","pluralBoundJQueryPlugin","isObject","wildcard","regexp","isElementInViewport","partial","rec","right","innerWidth","escapeRegExp","source","prop","findLabel","input","$label","tagName","removeWildcardClass","targets","classes","ensureArray","matcher","class_list","ok","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","t","complete","addURLQueryParameter","fullURL","param","url","hash","newURL","objs","comparator","reduce","list","next_obj","is_duplicate","frame_length","x","hasValue","selectedIndex","parseTime","amount","parseLength","reference_length","findRelatives","$relatives","$form","get_bounds","bounds","y","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","ms","func","timer","postpone","last_run","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","threshold_list","num_steps","thresholds","is_option_truthy","option","elementInViewport"],"sourceRoot":""}