{"version":3,"file":"chunks/422.be7b2776678900c787b1.min.js","mappings":"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","sources":["webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/dom.js"],"sourcesContent":["/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n\n        this.change_handler = utils.debounce(() => {\n            this.change_buttons_and_toggles();\n            this.change_checked();\n        }, 50);\n\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--select-all--click\",\n                this.select_all.bind(this)\n            );\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--deselect-all--click\",\n                this.deselect_all.bind(this)\n            );\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--toggle-all--click\",\n                this.toggle_all.bind(this)\n            );\n        }\n\n        // update select/deselect button status\n        this.change_buttons_and_toggles();\n        this.change_checked();\n        events.add_event_listener(\n            this.el,\n            \"change\",\n            \"pat-checklist--change-handler--change\",\n            this.change_handler.bind(this)\n        );\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            events.remove_event_listener(it, \"pat-checklist--select-all--click\");\n        }\n        for (const it of this.all_deselects) {\n            events.remove_event_listener(it, \"pat-checklist--deselect-all--click\");\n        }\n        for (const it of this.all_toggles) {\n            events.remove_event_listener(it, \"pat-checklist--toggle-all--click\");\n        }\n        events.remove_event_listener(this.el, \"pat-checklist--change-handler--change\");\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(events.change_event());\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(events.change_event());\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(events.change_event());\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes, ...this.all_radios]) {\n            for (const label of it.labels) {\n                label.classList.remove(\"checked\", \"unchecked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","/* Utilities for DOM traversal or navigation */\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        let uuid;\n        if (window.crypto.randomUUID) {\n            // Create a real UUID\n            // window.crypto.randomUUID does only exist in browsers with secure\n            // context.\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n            uuid = window.crypto.randomUUID();\n        } else {\n            // Create a sufficiently unique ID\n            const array = new Uint32Array(4);\n            uuid = window.crypto.getRandomValues(array).join(\"\");\n        }\n        set_data(el, \"uuid\", uuid);\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(\"input, select, textarea, button\")?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n"],"names":["log","logging","getLogger","disable_re","dont_catch_re","disabled","match","dont_catch","exec","window","location","search","info","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","init","$","document","ready","debug","Object","keys","sort","join","scan","body","clear","name","transformPattern","content","pattern","transform","prototype","e","error","initPattern","el","trigger","$el","plog","matches","orderPatterns","includes","splice","indexOf","unshift","querySelector","Text","jquery","selectors","this","dom","querySelectorAllAndMe","map","it","trim","replace","filter","parentNode","closest","reverse","classList","add","register","jquery_plugin","plugin_name","p1","toUpperCase","utils","jqueryPlugin","getOptions","patternName","options","length","parent","elOptions","data","tmpOptions","split","i","item","key","pop","value","initBasePattern","undefined","Registry","parser","mockupParser","Base","async","warn","defaults","emit","constructor","on","eventName","eventCallback","one","args","extend","patternProps","child","Error","hasOwnProperty","call","apply","arguments","Surrogate","__super__","autoregister","ArgumentParser","order","parameters","attribute","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","str","__","addAlias","alias","original","addGroupToSpec","spec","m","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","default_value","push","type","Array","isArray","_typeof","choice","slice","obj","_coerce","JSON","parse","toLowerCase","num","parseInt","isNaN","toString","_set","opts","parts","part","v","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","RegExp","arg","values","subopt","_parseShorthandNotation","parameter","shift","sense","flag","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","target","inherit","stack","$possible_config_providers","final_length","hasClass","parents","addBack","provider","frame","attr","bind","Math","max","results","removeDuplicateObjects","mergeStack","current_value","add_argument","event_listener_map","Map","remove_event_listener","id","els","removeEventListener","el_events","get","entries","entry","regexp_from_wildcard","test","delete","size","add_event_listener","event_type","cb","addEventListener","has","set","_cb","once","capture","await_event","event_name","Promise","resolve","await_pattern_init","reject","catch","generic_event","Event","bubbles","cancelable","blur_event","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","submitter","event","dragstart_event","dragend_event","methods","settings","time","initialTime","exceptionAreas","each","$this","lastEvent","Date","trueTime","untouched","inExceptionArea","mouseMoved","find","live","enteredException","leftException","timeout","addClass","destroy","off","remove","removeData","removeClass","startTimer","fn","setTimeout","floor","now","diff","method","scrollable","element","css","clientHeight","scrollHeight","clientWidth","scrollWidth","makeVisibleInScroll","parent_id","absoluteParent","elemTop","position","top","elemBottom","height","viewTop","scrollTop","viewBottom","safeOffset","docElem","elem","origin","left","nodeType","ownerDocument","documentElement","offset","setPositionAbsolute","offsettop","offsetleft","thiswidth","width","pos","setleft","settop","appendTo","show","positionAncestor","selector","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","findInclusive","slideIn","speed","easing","callback","animate","slideOut","Contains","a","scopedFind","Parser","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","change_handler","debounce","change_buttons_and_toggles","change_checked","querySelectorAll","find_scoped","select","btn","events","select_all","deselect","deselect_all","toggle","toggle_all","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","every","tgl","checked","preventDefault","box","dispatchEvent","label","labels","fieldset","root","writer","Function","oThis","TypeError","aArgs","fToBind","fNOP","fBound","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","path","route","_getFlag","context","setEnabled","state","isEnabled","setLevel","getLevel","fatal","logconfig","getWriter","safeClone","clone","forEach","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","pat","charAt","pluralBoundJQueryPlugin","isObject","wildcard","regexp","isElementInViewport","partial","rec","getBoundingClientRect","bottom","right","val","innerHeight","innerWidth","escapeRegExp","source","prop","findLabel","input","$label","tagName","form","removeWildcardClass","targets","classes","ensureArray","matcher","class_list","getAttribute","ok","setAttribute","removeAttribute","hideOrShow","nodes","visible","pattern_name","toNodeArray","transitions","none","hide","fade","slide","duration","transition","effect","on_complete","action","t","complete","addURLQueryParameter","fullURL","param","url","hash","newURL","objs","comparator","reduce","list","next_obj","is_duplicate","frame_length","x","hasValue","selectedIndex","parseTime","amount","parseFloat","round","parseLength","reference_length","min","findRelatives","$relatives","$form","get_bounds","bounds","y","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","style","animation_frame","requestAnimationFrame","ms","func","timer","postpone","last_run","clearTimeout","isIE","documentMode","jqToNode","force_array","NodeList","isPrototypeOf","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","appendChild","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","threshold_list","num_steps","thresholds","is_option_truthy","option","elementInViewport","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","get_relative_position","reference_el","abs","scrollLeft","get_data","set_data","all","wrap","wrapper","insertBefore","display","find_parents","ret","get_parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","parentElement","is_visible","offsetWidth","offsetHeight","is_input","nodeName","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","behavior","scrollTo","scroll_to_top","scroll_to_bottom","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","visible_ratio","rect_height","escape_css_id","CSS","escape","element_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","find_form"],"sourceRoot":""}