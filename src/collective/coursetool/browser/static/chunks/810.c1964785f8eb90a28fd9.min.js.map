{"version":3,"file":"chunks/810.c1964785f8eb90a28fd9.min.js","mappings":"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","sources":["webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js"],"sourcesContent":["// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            delete event_listener_map[el][id];\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map[el][id] = [event_type, _cb, opts.capture ? opts : undefined];\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} postpone - If true, the function will be called after it stops being called for N milliseconds.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw (\n                'Attempted to add an alias \"' +\n                alias +\n                '\" for a non-existing parser argument \"' +\n                original +\n                '\".'\n            );\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to boolean\";\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw \"Cannot convert value for \" + name + \" to number\";\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to number\";\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw (\n                            \"Do not know how to convert value for \" +\n                            name +\n                            \" to \" +\n                            spec.type\n                        );\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(\"Illegal value for \" + name + \": \" + value);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(\"Ignoring value for unknown argument \" + name);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(\"Invalid parameter: \" + part + \": \" + argstring);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(\"Unknown named parameter \" + matches[1]);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(\"Ignore extra arguments: \" + parts.join(\" \"));\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(\"Invalid JSON argument found: \" + parameter);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters)\n            if (typeof this.parameters[name].value === \"function\")\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(\"Default function for \" + name + \" failed.\");\n                }\n            else result[name] = this.parameters[name].value;\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) continue;\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            )\n                options[name] = options[spec.value.slice(1)];\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) continue;\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\")\n                        options[spec.group] = {};\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el\n                .parents(\"[\" + this.attribute + \"]\")\n                .addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            btn.addEventListener(\"click\", this.select_all.bind(this));\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            btn.addEventListener(\"click\", this.deselect_all.bind(this));\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            btn.addEventListener(\"click\", this.toggle_all.bind(this));\n        }\n\n        // update select/deselect button status\n        this.el.addEventListener(\"change\", this._handler_change.bind(this));\n        this.change_buttons_and_toggles();\n        this.change_checked();\n    },\n\n    _handler_change() {\n        utils.debounce(() => this.change_buttons_and_toggles(), 50)();\n        utils.debounce(() => this.change_checked(), 50)();\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            it.removeEventListener(\"click\", this.select_all);\n        }\n        for (const it of this.all_deselects) {\n            it.removeEventListener(\"click\", this.deselect_all);\n        }\n        this.el.removeEventListener(\"change\", this._handler_change);\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes, ...this.all_radios]) {\n            for (const label of it.labels) {\n                label.classList.remove(\"checked\", \"unchecked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n"],"names":["event_listener_map","remove_event_listener","el","id","removeEventListener","el_events","entries","entry","Object","add_event_listener","event_type","cb","opts","addEventListener","_cb","once","e","capture","undefined","await_event","event_name","Promise","resolve","await_pattern_init","pattern","reject","one","target","name","catch","Error","blur_event","Event","bubbles","cancelable","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","dragstart_event","dragend_event","logger","logging","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","value","window","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","document","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","toNodeArray","nodes","jquery","NodeList","Array","querySelectorAllAndMe","selector","all","querySelectorAll","matches","unshift","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","parent","closest","push","find_scoped","indexOf","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","overflow_y","includes","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","options","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","get_data","default_value","set_data","delete_data","template","template_string","template_variables","warn","Function","call","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","CSS","escape","split","events","root","writer","prototype","bind","oThis","this","TypeError","aArgs","slice","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","log","info","error","getLogger","path","route","length","shift","join","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","debug","fatal","match","logconfig","exec","location","search","getWriter","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","init","$","ready","keys","sort","scan","clear","transformPattern","content","transform","initPattern","trigger","$el","plog","orderPatterns","splice","querySelector","Text","selectors","map","it","replace","filter","reverse","classList","add","register","jquery_plugin","plugin_name","p1","utils","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","each","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","isElementInViewport","partial","rec","right","every","documentElement","clientHeight","innerWidth","clientWidth","jqueryPlugin","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","nodeType","tagName","form","removeWildcardClass","targets","classes","ensureArray","remove","matcher","RegExp","class_list","ok","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","amount","parseLength","reference_length","findRelatives","$relatives","$form","find","get_bounds","bounds","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","setTimeout","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","is_option_truthy","option","getCSSValue","elementInViewport","getOptions","patternName","elOptions","data","tmpOptions","item","key","pop","initBasePattern","Registry","parser","mockupParser","Base","async","defaults","emit","constructor","on","eventName","eventCallback","patternProps","child","Surrogate","__super__","autoregister","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","__","addAlias","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","_typeof","choice","_coerce","JSON","parse","toLowerCase","num","isNaN","_set","part","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","inherit","$possible_config_providers","final_length","hasClass","addBack","provider","attr","current_value","add_argument","methods","settings","initialTime","exceptionAreas","lastEvent","trueTime","untouched","inExceptionArea","mouseMoved","live","enteredException","leftException","addClass","event","destroy","off","removeData","removeClass","startTimer","fn","diff","scrollable","element","css","scrollWidth","parent_id","absoluteParent","elemTop","elemBottom","viewTop","viewBottom","docElem","elem","origin","ownerDocument","offsettop","offsetleft","thiswidth","pos","safeOffset","setleft","settop","appendTo","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","speed","animate","a","Parser","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","select","btn","select_all","deselect","deselect_all","toggle","toggle_all","_handler_change","change_buttons_and_toggles","change_checked","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","tgl","preventDefault","box","dispatchEvent","labels","fieldset"],"sourceRoot":""}