{"version":3,"file":"chunks/465.f6c668fa8f7c7ea0b117.min.js","mappings":"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","sources":["webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js"],"sourcesContent":["/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        let uuid;\n        if (window.crypto.randomUUID) {\n            // Create a real UUID\n            // window.crypto.randomUUID does only exist in browsers with secure\n            // context.\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n            uuid = window.crypto.randomUUID();\n        } else {\n            // Create a sufficiently unique ID\n            const array = new Uint32Array(4);\n            uuid = window.crypto.getRandomValues(array).join(\"\");\n        }\n        set_data(el, \"uuid\", uuid);\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(\"input, select, textarea, button\")?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n\n        this.change_handler = utils.debounce(() => {\n            this.change_buttons_and_toggles();\n            this.change_checked();\n        }, 50);\n\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--select-all--click\",\n                this.select_all.bind(this)\n            );\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--deselect-all--click\",\n                this.deselect_all.bind(this)\n            );\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            events.add_event_listener(\n                btn,\n                \"click\",\n                \"pat-checklist--toggle-all--click\",\n                this.toggle_all.bind(this)\n            );\n        }\n\n        // update select/deselect button status\n        this.change_buttons_and_toggles();\n        this.change_checked();\n        events.add_event_listener(\n            this.el,\n            \"change\",\n            \"pat-checklist--change-handler--change\",\n            this.change_handler.bind(this)\n        );\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            events.remove_event_listener(it, \"pat-checklist--select-all--click\");\n        }\n        for (const it of this.all_deselects) {\n            events.remove_event_listener(it, \"pat-checklist--deselect-all--click\");\n        }\n        for (const it of this.all_toggles) {\n            events.remove_event_listener(it, \"pat-checklist--toggle-all--click\");\n        }\n        events.remove_event_listener(this.el, \"pat-checklist--change-handler--change\");\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(events.change_event());\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(events.change_event());\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(events.change_event());\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes, ...this.all_radios]) {\n            for (const label of it.labels) {\n                label.classList.remove(\"checked\", \"unchecked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n"],"names":["logger","logging","getLogger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","el","property","as_pixels","as_float","value","window","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","document","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","get_data","name","default_value","set_data","toNodeArray","nodes","jquery","NodeList","Array","querySelectorAllAndMe","selector","all","querySelectorAll","matches","unshift","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","parent","closest","push","find_scoped","indexOf","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","overflow_y","includes","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","options","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","warn","Function","call","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","id","CSS","escape","split","element_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","join","find_form","form","querySelector","add_event_listener","events","remove_event_listener","event_listener_map","Map","els","keys","removeEventListener","el_events","get","entries","filter","entry","utils","regexp_from_wildcard","delete","size","event_type","cb","opts","addEventListener","has","set","_cb","once","e","capture","undefined","await_event","event_name","Promise","resolve","await_pattern_init","pattern","reject","one","target","catch","Error","generic_event","Event","bubbles","cancelable","blur_event","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","submitter","event","dragstart_event","dragend_event","root","writer","prototype","bind","oThis","this","TypeError","aArgs","slice","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","log","info","error","path","route","length","shift","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","debug","fatal","match","logconfig","exec","location","search","getWriter","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","init","$","ready","Object","sort","scan","clear","transformPattern","content","transform","initPattern","trigger","$el","plog","orderPatterns","splice","Text","selectors","map","it","replace","reverse","classList","add","register","jquery_plugin","plugin_name","p1","jqueryPlugin","safeClone","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","each","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","wildcard","regexp","RegExp","isElementInViewport","partial","rec","right","every","documentElement","clientHeight","innerWidth","clientWidth","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","nodeType","tagName","removeWildcardClass","targets","classes","ensureArray","remove","matcher","class_list","ok","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","amount","parseLength","reference_length","findRelatives","$relatives","$form","find","get_bounds","bounds","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","setTimeout","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","is_option_truthy","option","elementInViewport","getOptions","patternName","elOptions","data","tmpOptions","item","key","pop","initBasePattern","Registry","parser","mockupParser","Base","async","defaults","emit","constructor","on","eventName","eventCallback","patternProps","child","Surrogate","__super__","autoregister","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","__","addAlias","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","_typeof","choice","_coerce","JSON","parse","toLowerCase","num","isNaN","_set","part","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","inherit","$possible_config_providers","final_length","hasClass","addBack","provider","attr","current_value","add_argument","methods","settings","initialTime","exceptionAreas","lastEvent","trueTime","untouched","inExceptionArea","mouseMoved","live","enteredException","leftException","addClass","destroy","off","removeData","removeClass","startTimer","fn","diff","scrollable","element","css","scrollWidth","makeVisibleInScroll","parent_id","absoluteParent","elemTop","elemBottom","viewTop","viewBottom","safeOffset","docElem","elem","origin","ownerDocument","setPositionAbsolute","offsettop","offsetleft","thiswidth","pos","setleft","settop","appendTo","positionAncestor","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","findInclusive","slideIn","speed","animate","slideOut","Contains","a","scopedFind","Parser","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","change_handler","change_buttons_and_toggles","change_checked","select","btn","select_all","deselect","deselect_all","toggle","toggle_all","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","tgl","preventDefault","box","dispatchEvent","labels","fieldset"],"sourceRoot":""}