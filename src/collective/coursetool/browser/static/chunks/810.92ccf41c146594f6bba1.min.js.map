{"version":3,"file":"chunks/810.92ccf41c146594f6bba1.min.js","mappings":"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","sources":["webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://collective.coursetool/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js"],"sourcesContent":["// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            delete event_listener_map[el][id];\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map[el][id] = [event_type, _cb, opts.capture ? opts : undefined];\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", () => {\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", () => {\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * @param {Node} el - The DOM node to wrap.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {DOM element} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(DOM Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\nfunction elementInViewport(el) {\n    var rect = el.getBoundingClientRect(),\n        docEl = document.documentElement,\n        vWidth = window.innerWidth || docEl.clientWidth,\n        vHeight = window.innerHeight || docEl.clientHeight;\n\n    if (rect.right < 0 || rect.bottom < 0 || rect.left > vWidth || rect.top > vHeight)\n        return false;\n    return true;\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nconst debounce = (func, ms, timer = { timer: null }) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    //\n    return function () {\n        clearTimeout(timer.timer);\n        const args = arguments;\n        timer.timer = setTimeout(() => func.apply(this, args), ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    elementInViewport: elementInViewport,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n};\n\nexport default utils;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw (\n                'Attempted to add an alias \"' +\n                alias +\n                '\" for a non-existing parser argument \"' +\n                original +\n                '\".'\n            );\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to boolean\";\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw \"Cannot convert value for \" + name + \" to number\";\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to number\";\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw (\n                            \"Do not know how to convert value for \" +\n                            name +\n                            \" to \" +\n                            spec.type\n                        );\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(\"Illegal value for \" + name + \": \" + value);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(\"Ignoring value for unknown argument \" + name);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(\"Invalid parameter: \" + part + \": \" + argstring);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(\"Unknown named parameter \" + matches[1]);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(\"Ignore extra arguments: \" + parts.join(\" \"));\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(\"Invalid JSON argument found: \" + parameter);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters)\n            if (typeof this.parameters[name].value === \"function\")\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(\"Default function for \" + name + \" failed.\");\n                }\n            else result[name] = this.parameters[name].value;\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) continue;\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            )\n                options[name] = options[spec.value.slice(1)];\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) continue;\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\")\n                        options[spec.group] = {};\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el\n                .parents(\"[\" + this.attribute + \"]\")\n                .addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]:not(${this.options.toggle}`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            btn.addEventListener(\"click\", this.select_all.bind(this));\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            btn.addEventListener(\"click\", this.deselect_all.bind(this));\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            btn.addEventListener(\"click\", this.toggle_all.bind(this));\n        }\n\n        // update select/deselect button status\n        this.el.addEventListener(\"change\", this._handler_change.bind(this));\n        this.change_buttons_and_toggles();\n        this.change_checked();\n    },\n\n    _handler_change() {\n        utils.debounce(() => this.change_buttons_and_toggles(), 50)();\n        utils.debounce(() => this.change_checked(), 50)();\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            it.removeEventListener(\"click\", this.select_all);\n        }\n        for (const it of this.all_deselects) {\n            it.removeEventListener(\"click\", this.deselect_all);\n        }\n        this.el.removeEventListener(\"change\", this._handler_change);\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes].concat([...this.all_radios])) {\n            for (const label of it.labels) {\n                label.classList.remove(\"unchecked\");\n                label.classList.remove(\"checked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n"],"names":["event_listener_map","remove_event_listener","el","id","removeEventListener","el_events","entries","entry","Object","add_event_listener","event_type","cb","opts","addEventListener","_cb","once","e","capture","undefined","await_event","event_name","Promise","resolve","await_pattern_init","pattern","reject","one","name","catch","Error","blur_event","Event","bubbles","cancelable","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","dragstart_event","dragend_event","logger","logging","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","value","window","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","toNodeArray","nodes","jquery","NodeList","Array","querySelectorAllAndMe","selector","all","querySelectorAll","matches","unshift","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","parent","closest","push","find_scoped","indexOf","document","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","body","overflow_y","includes","overflow_x","get_data","default_value","set_data","delete_data","template","template_string","template_variables","warn","Function","call","events","root","writer","prototype","bind","oThis","this","TypeError","aArgs","slice","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","log","info","error","getLogger","path","split","route","length","shift","join","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","debug","fatal","match","logconfig","exec","location","search","getWriter","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","init","$","ready","keys","sort","scan","clear","transformPattern","content","transform","initPattern","trigger","$el","plog","orderPatterns","splice","querySelector","Text","selectors","dom","map","it","replace","filter","reverse","classList","add","register","jquery_plugin","plugin_name","p1","utils","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","options","each","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","jqueryPlugin","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","nodeType","tagName","form","elementInViewport","rect","getBoundingClientRect","docEl","documentElement","vWidth","innerWidth","clientWidth","vHeight","innerHeight","clientHeight","right","bottom","left","top","removeWildcardClass","targets","classes","ensureArray","target","remove","matcher","RegExp","class_list","ok","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","mergeStack","stack","results","frame","frame_length","x","isElementInViewport","partial","offset","rec","every","hasValue","checked","selectedIndex","parseTime","time","m","amount","findRelatives","$relatives","$form","find","get_bounds","bounds","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","setTimeout","debounce","func","timer","clearTimeout","args","isIE","documentMode","jqToNode","force_array","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","Date","UTC","utc_2","floor","getCSSValue","getOptions","patternName","elOptions","data","tmpOptions","item","key","pop","initBasePattern","Registry","parser","mockupParser","Base","async","defaults","emit","constructor","on","eventName","eventCallback","patternProps","child","Surrogate","__super__","autoregister","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","__","addAlias","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","_typeof","choice","_coerce","JSON","parse","toLowerCase","num","isNaN","_set","part","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","inherit","$possible_config_providers","final_length","hasClass","addBack","provider","attr","max","current_value","add_argument","methods","settings","initialTime","exceptionAreas","lastEvent","trueTime","untouched","inExceptionArea","mouseMoved","live","enteredException","leftException","addClass","event","destroy","off","removeData","removeClass","startTimer","fn","now","diff","scrollable","element","css","scrollHeight","scrollWidth","parent_id","absoluteParent","elemTop","position","elemBottom","viewTop","scrollTop","viewBottom","docElem","elem","origin","ownerDocument","offsettop","offsetleft","thiswidth","pos","safeOffset","setleft","settop","appendTo","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","speed","animate","a","Parser","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","toggle","select","btn","select_all","deselect","deselect_all","toggle_all","_handler_change","change_buttons_and_toggles","change_checked","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","tgl","preventDefault","box","dispatchEvent","labels","fieldset"],"sourceRoot":""}